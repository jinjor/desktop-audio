// Code generated by gen/main.go; DO NOT EDIT.

package audio

const (
	waveNone = iota
	waveSine
	waveTriangle
	waveSquare
	waveSquareWT
	wavePulse
	waveSaw
	waveSawWT
	waveSawRev
	waveNoise
)

func waveKindFromString(s string) int {
	switch s {
	case "none":
		return waveNone
	case "sine":
		return waveSine
	case "triangle":
		return waveTriangle
	case "square":
		return waveSquare
	case "square-wt":
		return waveSquareWT
	case "pulse":
		return wavePulse
	case "saw":
		return waveSaw
	case "saw-wt":
		return waveSawWT
	case "saw-rev":
		return waveSawRev
	case "noise":
		return waveNoise
	}
	return waveNone
}
func waveKindToString(d int) string {
	switch d {
	case waveNone:
		return "none"
	case waveSine:
		return "sine"
	case waveTriangle:
		return "triangle"
	case waveSquare:
		return "square"
	case waveSquareWT:
		return "square-wt"
	case wavePulse:
		return "pulse"
	case waveSaw:
		return "saw"
	case waveSawWT:
		return "saw-wt"
	case waveSawRev:
		return "saw-rev"
	case waveNoise:
		return "noise"
	}
	return "none"
}

const (
	filterNone = iota
	filterLowPassFIR
	filterHighPassFIR
	filterLowPass
	filterHighPass
	filterBandPass1
	filterBandPass2
	filterNotch
	filterPeaking
	filterLowShelf
	filterHighShelf
)

func filterKindFromString(s string) int {
	switch s {
	case "none":
		return filterNone
	case "lowpass-fir":
		return filterLowPassFIR
	case "highpass-fir":
		return filterHighPassFIR
	case "lowpass":
		return filterLowPass
	case "highpass":
		return filterHighPass
	case "bandpass-1":
		return filterBandPass1
	case "bandpass-2":
		return filterBandPass2
	case "notch":
		return filterNotch
	case "peaking":
		return filterPeaking
	case "lowshelf":
		return filterLowShelf
	case "highshelf":
		return filterHighShelf
	}
	return filterNone
}
func filterKindToString(d int) string {
	switch d {
	case filterNone:
		return "none"
	case filterLowPassFIR:
		return "lowpass-fir"
	case filterHighPassFIR:
		return "highpass-fir"
	case filterLowPass:
		return "lowpass"
	case filterHighPass:
		return "highpass"
	case filterBandPass1:
		return "bandpass-1"
	case filterBandPass2:
		return "bandpass-2"
	case filterNotch:
		return "notch"
	case filterPeaking:
		return "peaking"
	case filterLowShelf:
		return "lowshelf"
	case filterHighShelf:
		return "highshelf"
	}
	return "none"
}

const (
	destNone = iota
	destVibrato
	destTremolo
	destFM
	destPM
	destAM
	destFreq
	destFilterFreq
	destFilterQ
	destFilterQ0V
	destFilterGain
	destFilterGain0V
	destLfo0Freq
	destLfo1Freq
	destLfo2Freq
	destLfo0Amount
	destLfo1Amount
	destLfo2Amount
)

func destinationFromString(s string) int {
	switch s {
	case "none":
		return destNone
	case "vibrato":
		return destVibrato
	case "tremolo":
		return destTremolo
	case "fm":
		return destFM
	case "pm":
		return destPM
	case "am":
		return destAM
	case "freq":
		return destFreq
	case "filter_freq":
		return destFilterFreq
	case "filter_q":
		return destFilterQ
	case "filter_q_0v":
		return destFilterQ0V
	case "filter_gain":
		return destFilterGain
	case "filter_gain_0v":
		return destFilterGain0V
	case "lfo0_freq":
		return destLfo0Freq
	case "lfo1_freq":
		return destLfo1Freq
	case "lfo2_freq":
		return destLfo2Freq
	case "lfo0_amount":
		return destLfo0Amount
	case "lfo1_amount":
		return destLfo1Amount
	case "lfo2_amount":
		return destLfo2Amount
	}
	return destNone
}
func destinationToString(d int) string {
	switch d {
	case destNone:
		return "none"
	case destVibrato:
		return "vibrato"
	case destTremolo:
		return "tremolo"
	case destFM:
		return "fm"
	case destPM:
		return "pm"
	case destAM:
		return "am"
	case destFreq:
		return "freq"
	case destFilterFreq:
		return "filter_freq"
	case destFilterQ:
		return "filter_q"
	case destFilterQ0V:
		return "filter_q_0v"
	case destFilterGain:
		return "filter_gain"
	case destFilterGain0V:
		return "filter_gain_0v"
	case destLfo0Freq:
		return "lfo0_freq"
	case destLfo1Freq:
		return "lfo1_freq"
	case destLfo2Freq:
		return "lfo2_freq"
	case destLfo0Amount:
		return "lfo0_amount"
	case destLfo1Amount:
		return "lfo1_amount"
	case destLfo2Amount:
		return "lfo2_amount"
	}
	return "none"
}
